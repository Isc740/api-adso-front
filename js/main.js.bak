const tableConfigs = {
    'table-clients': {
        columns: [
            { title: 'ID', data: 'cliId' },
            { title: 'Nombre', data: 'cliFirstName' },
            { title: 'Apellido', data: 'cliLastName' },
            { title: 'Dirección', data: 'cliDirection' }
        ],
        endpoint: 'Clients'
    },
    'table-products': {
        columns: [
            { title: 'ID', data: 'proId' },
            { title: 'Nombre', data: 'proName' },
            { title: 'Precio', data: 'proPrice' },
            { title: 'Categoría ID', data: 'categoryCatId' }
        ],
        endpoint: 'Products'
    },
    'table-orders': {
        columns: [
            { title: 'ID', data: 'ordId' },
            { title: 'Fecha', data: 'ordDate' },
            { title: 'Estado', data: 'ordStatus', render: data => data ? 'Activo' : 'Inactivo' },
            { title: 'Cliente ID', data: 'clientCliId' }
        ],
        endpoint: 'Orders'
    },
    'table-orderdetails': {
        columns: [
            { title: 'ID', data: 'detId' },
            { title: 'Cantidad', data: 'detAmount' },
            { title: 'Producto ID', data: 'productProId' },
            { title: 'Orden ID', data: 'orderOrdId' }
        ],
        endpoint: 'OrderDetails'
    },
    'table-categories': {
        columns: [
            { title: 'ID', data: 'catId' },
            { title: 'Descripción', data: 'catDescription' }
        ],
        endpoint: 'Categories'
    }
};

function initSidebar() {
    const links = document.querySelectorAll('.nav-link');
    
    links.forEach(link => {
        link.addEventListener('click', async (e) => {
            e.preventDefault();
            
            // Desactivar todos los enlaces
            links.forEach(l => l.classList.remove('active'));
            
            // Activar el enlace actual
            const target = e.currentTarget;
            target.classList.add('active');
            
            // Actualizar título
            document.getElementById('table-title').textContent = 
                target.textContent.trim();
            
            // Cargar tabla
            await loadTable(target.dataset.table);
        });
    });
}


document.addEventListener('DOMContentLoaded', () => {
    initSidebar();
    loadTable('table-clients'); // Carga clientes por defecto
});

async function loadTable(tableName) {
    const config = tableConfigs[tableName];
    if (!config) return;

    const data = await fetchData(config.endpoint);
    const $table = $('#data-table');

    // Destruye DataTable si ya existe
    if ($.fn.DataTable.isDataTable($table)) {
        $table.DataTable().destroy();
        $table.empty(); // Limpia la tabla
    }

    // Asegura que la tabla exista en el DOM
    if ($table.length === 0) {
        console.error("Tabla no encontrada en el DOM");
        return;
    }

    // Inicializa DataTables
    $table.DataTable({
        data: data,
        columns: config.columns,
        responsive: true,
        language: {
            url: '//cdn.datatables.net/plug-ins/1.11.5/i18n/es-ES.json'
        }
    });
}